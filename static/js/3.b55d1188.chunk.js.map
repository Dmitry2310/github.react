{"version":3,"sources":["components/hoc/AuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Assets/Images/bg.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","style","item","src","alt","news","message","likes","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","map","post","id","AddNewPostFormRedux","onSubmit","formData","postNews","newPostText","reduxForm","form","writeMessage","handleSubmit","Field","area","validate","required","placeholder","name","component","TextArea","button","MyPostsContainer","profilePage","photos","dispatch","addPostActionCreator","ProfileSatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxform","profile","error","description","formSummaryError","editButton","userName","createField","LoginInput","type","AboutMe","Object","keys","contacts","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","bgDescription","bgImage","bgImg","target","files","length","savePhoto","avatarContainer","small","userPhoto","itemStatus","initialValues","saveProfile","then","Profile","ProfileContainer","refreshProfile","userId","match","params","autorizedUserId","history","push","getUserProfile","getStatus","prevProps","prevState","compose","withRouter"],"mappings":"wNAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAJV,GAEXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBClB7EM,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,MAAQ,2BAA2B,gBAAkB,qCAAqC,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,gCAAgC,SAAW,8BAA8B,QAAU,6BAA6B,WAAa,gCAAgC,iBAAmB,wC,oBCA5aD,EAAOC,QAAU,CAAC,aAAe,8BAA8B,OAAS,wBAAwB,KAAO,sBAAsB,MAAQ,yB,oBCArID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,qB,8ICWhEC,EAVF,SAACN,GACZ,OACE,sBAAKO,UAAWC,IAAMC,KAAtB,UACE,qBAAKC,IAAI,iDAAiDC,IAAK,KAC/D,qBAAKJ,UAAWC,IAAMI,KAAtB,SAA6BZ,EAAMa,UACnC,sBAAKN,UAAWC,IAAMM,MAAtB,UAA6B,yCAA7B,IAAiDd,EAAMe,kB,iCCAvDC,EAAcC,YAAiB,IAE/BC,EAAUhB,IAAMiB,MAAK,SAACnB,GAE1B,IAAIoB,EAAgBpB,EAAMqB,MAAMC,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAoBV,QAASU,EAAKA,KAAoBR,WAAYQ,EAAKR,YAA1BQ,EAAKC,OAMhG,OACE,gCACE,cAACC,EAAD,CAAsBC,SANV,SAACC,GACf3B,EAAM4B,SAASD,EAASE,gBAMtB,qBAAKtB,UAAWC,IAAMa,MAAtB,SACGD,UAkBHK,EAAsBK,YAAU,CAACC,KAAM,yBAAjBD,EAZL,SAAC9B,GACtB,OACE,uBAAMO,UAAWC,IAAMwB,aAAcN,SAAU1B,EAAMiC,aAArD,UACE,cAACC,EAAA,EAAD,CAAO3B,UAAWC,IAAM2B,KAAMC,SAAU,CAACC,IAAUrB,GAAcsB,YAAY,YAC7EC,KAAK,cAAcC,UAAWC,MAC9B,qBAAKlC,UAAWC,IAAMkC,OAAtB,SACE,sDAQOxB,I,gBCpBAyB,EAFQxC,aAfD,SAACV,GACrB,MAAO,CACL4B,MAAO5B,EAAMmD,YAAYvB,MACzBQ,YAAapC,EAAMmD,YAAYf,YAC/BgB,OAAQpD,EAAMmD,YAAYC,WAGL,SAACC,GACxB,MAAO,CACLlB,SAAU,SAACC,GACTiB,EAASC,YAAqBlB,QAKb1B,CAA6Ce,G,2CCnBrD,MAA0B,+BCuC1B8B,EApCe,SAAChD,GAE3B,MAA8BiD,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASjD,EAAMoD,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAW,WACPD,EAAUrD,EAAMoD,UACjB,CAACpD,EAAMoD,SAYV,OACI,iCACMF,GACE,8BACI,qBAAKK,cAdI,WACrBJ,GAAY,IAaA,SAAuCnD,EAAMoD,QAAU,gBAG9DF,GACG,8BACI,uBAAOM,SAZA,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAWmBC,WAAW,EAAMC,OAhBvC,WACvBV,GAAY,GACZnD,EAAM8D,aAAaV,IAeHO,MAAOP,UCgBhBW,EAFkBjC,YAAU,CAAEC,KAAM,gBAAlBD,EAxCT,SAAC,GAAsC,IAApCkC,EAAmC,EAAnCA,QAAS/B,EAA0B,EAA1BA,aAAcgC,EAAY,EAAZA,MAC9C,OACI,uBAAM1D,UAAWC,IAAM0D,YAAaxC,SAAUO,EAA9C,UACKgC,GACG,qBAAK1D,UAAWC,IAAM2D,iBAAtB,SACKF,IAET,sBAAK1D,UAAWC,IAAM4D,WAAtB,cAAmC,0CAAnC,OACA,qBAAK7D,UAAWC,IAAMC,KAAtB,SACI,sBAAKF,UAAWC,IAAM6D,SAAtB,UAAgC,qCAAhC,KACOC,YAAY,YAAa,WAAY,CAACjC,KAAWkC,UAI5D,sBAAKhE,UAAWC,IAAMC,KAAtB,UAA4B,kDAA5B,KACK6D,YAAY,GAAI,iBAAkB,GAAIC,IAAY,CAAEC,KAAM,gBAG/D,sBAAKjE,UAAWC,IAAMC,KAAtB,UACI,uDADJ,KAEK6D,YAAY,yBAA0B,4BAA6B,GAAI7B,QAE5E,sBAAKlC,UAAWC,IAAMC,KAAtB,UACI,yCADJ,KACsBuD,EAAQS,QACzBH,YAAY,WAAY,UAAW,GAAI7B,QAE5C,sBAAKlC,UAAWC,IAAMC,KAAtB,UACI,yCADJ,MACuBiE,OAAOC,KAAKX,EAAQY,UAAUtD,KAAI,SAAAuD,GACjD,OACI,qBAAetE,UAAWC,IAAMsE,QAAhC,SACI,8BAAID,EAAJ,KAAWP,YAAYO,EAAK,YAAcA,EAAK,GAAIN,SAD7CM,eCa5BE,EAAc,SAAC,GAAwC,IAAtCf,EAAqC,EAArCA,QAASgB,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACvC,OACE,sBAAK1E,UAAWC,IAAM0D,YAAtB,UACGc,GAAW,sBAAKzE,UAAWC,IAAM4D,WAAtB,cAAmC,wBAAQc,QAASD,EAAjB,kBAAnC,OACZ,qBAAK1E,UAAWC,IAAMC,KAAtB,SACE,sBAAKF,UAAWC,IAAM6D,SAAtB,UAAgC,qCAAhC,MAA+CL,EAAQmB,cAGzD,sBAAK5E,UAAWC,IAAMC,KAAtB,UACE,kDADF,KAC6BuD,EAAQoB,eAAiB,MAAQ,QAE7DpB,EAAQoB,gBACP,sBAAK7E,UAAWC,IAAMC,KAAtB,UACE,0CADF,KACqBuD,EAAQqB,6BAG/B,sBAAK9E,UAAWC,IAAMC,KAAtB,UACE,yCADF,KACoBuD,EAAQsB,WAE5B,sBAAK/E,UAAWC,IAAMC,KAAtB,UACE,yCADF,MACqBiE,OAAOC,KAAKX,EAAQY,UAAUtD,KAAI,SAAAuD,GACnD,OAAO,cAAC,EAAD,CAAmBU,aAAcV,EAAKW,aAAcxB,EAAQY,SAASC,IAAvDA,aAOzBY,EAAU,SAAC,GAAoC,IAAlCF,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC/B,OACE,sBAAKjF,UAAWC,IAAMsE,QAAtB,UACE,kCAAKS,EAAL,OADF,MAC6BC,MAIlBE,EA3EK,SAAC1F,GAEnB,MAA8BiD,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KAEA,IAAKnD,EAAMgE,QACT,OAAO,cAAC2B,EAAA,EAAD,IAkBT,OACE,sBAAKpF,UAAWC,IAAMoF,cAAtB,UACE,qBAAKlF,IAAKmF,EAASlF,IAAK,GAAIJ,UAAWC,IAAMsF,QAC5C9F,EAAMgF,SAAW,uBAAOR,KAAM,OAAQhB,SAlBjB,SAACC,GACrBA,EAAEsC,OAAOC,MAAMC,QACjBjG,EAAMkG,UAAUzC,EAAEsC,OAAOC,MAAM,OAiB/B,qBAAKzF,UAAWC,IAAM2F,gBAAtB,SACE,qBAAKxF,IAAK,GAAID,IAAmC,MAA9BV,EAAMgE,QAAQnB,OAAOuD,MAAgBpG,EAAMgE,QAAQnB,OAAOuD,MAAQC,QAEvF,qBAAK9F,UAAWC,IAAM8F,WAAtB,SACE,cAAE,EAAF,CAAwBlD,OAAQpD,EAAMoD,OAAQU,aAAc9D,EAAM8D,iBAEnEZ,EACG,cAAC,EAAD,CAA0BqD,cAAevG,EAAMgE,QAASA,QAAShE,EAAMgE,QAAStC,SApBnE,SAACC,GACpB3B,EAAMwG,YAAY7E,GAAU8E,MAC1B,WACEtD,GAAY,SAkBV,cAAE,EAAF,CAAca,QAAShE,EAAMgE,QAASgB,QAAShF,EAAMgF,QAASC,aAAc,WAAQ9B,GAAY,UC9B3FuD,EAVC,SAAC1G,GACb,OACI,gCACI,cAAC,EAAD,CAAagF,QAAShF,EAAMgF,QAAShB,QAAShE,EAAMgE,QAASZ,OAAQpD,EAAMoD,OACvEU,aAAc9D,EAAM8D,aAAcoC,UAAWlG,EAAMkG,UACnDM,YAAaxG,EAAMwG,cACvB,cAAC,EAAD,Q,yBCDNG,E,4MAEFC,eAAiB,WACb,IAAIC,EAAS,EAAK7G,MAAM8G,MAAMC,OAAOF,OAChCA,IACDA,EAAS,EAAK7G,MAAMgH,kBAEhB,EAAKhH,MAAMiH,QAAQC,KAAK,UAGhC,EAAKlH,MAAMmH,eAAeN,GAC1B,EAAK7G,MAAMoH,UAAUP,I,uDAGzB,WACI9G,KAAK6G,mB,gCAGT,SAAmBS,EAAWC,GACtBvH,KAAKC,MAAM8G,MAAMC,OAAOF,SAAWQ,EAAUP,MAAMC,OAAOF,QAAU9G,KAAK6G,mB,oBAGjF,WACI,OACI,8BACI,cAAC,EAAD,2BAAa7G,KAAKC,OAAlB,IAAyBgF,SAAUjF,KAAKC,MAAM8G,MAAMC,OAAOF,OAAQ7C,QAASjE,KAAKC,MAAMgE,QAASZ,OAAQrD,KAAKC,MAAMoD,OAC/GU,aAAc/D,KAAKC,MAAM8D,aAAcoC,UAAWnG,KAAKC,MAAMkG,mB,GA1BlDhG,IAAML,WAwCtB0H,sBACXpH,aAVkB,SAACV,GACnB,MAAO,CACHuE,QAASvE,EAAMmD,YAAYoB,QAC3BZ,OAAQ3D,EAAMmD,YAAYQ,OAC1B4D,gBAAiBvH,EAAME,KAAKkH,OAC5BnH,OAAQD,EAAME,KAAKD,UAKE,CAAEyH,mBAAgBC,cAAWtD,iBAAcoC,cAAWM,kBAC/EgB,IAAY5H,IAFD2H,CAEmBZ","file":"static/js/3.b55d1188.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n};\n\nexport const WithAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        }\n    }\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgDescription\":\"ProfileInfo_bgDescription__3zN-X\",\"bgImg\":\"ProfileInfo_bgImg__1v8sR\",\"avatarContainer\":\"ProfileInfo_avatarContainer__1Nl_A\",\"description\":\"ProfileInfo_description__2yWda\",\"item\":\"ProfileInfo_item__2oxPX\",\"itemStatus\":\"ProfileInfo_itemStatus__1r5Ee\",\"userName\":\"ProfileInfo_userName__2XnM7\",\"contact\":\"ProfileInfo_contact__1N3gp\",\"editButton\":\"ProfileInfo_editButton__wSjKk\",\"formSummaryError\":\"ProfileInfo_formSummaryError__3Pphw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"writeMessage\":\"MyPosts_writeMessage__2aPDx\",\"button\":\"MyPosts_button__2WbpQ\",\"area\":\"MyPosts_area__XnDhM\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"likes\":\"Post_likes__2o7Hq\",\"news\":\"Post_news__R0WCn\"};","import style from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={style.item}>\n      <img src='https://images3.alphacoders.com/690/690494.jpg' alt={''}></img>\n      <div className={style.news}>{props.message}</div>\n      <div className={style.likes}><span>Likes</span> {props.likesCount}</div> \n    </div>\n  );\n}\n\nexport default Post;","import React from 'react';\nimport style from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from '../../../utilits/validators/validators';\nimport { TextArea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo((props) => {\n\n  let postsElements = props.posts.map((post) => <Post key={post.id} message={post.post} key={post.id} likesCount={post.likesCount} />);\n\n  let onAddPost = (formData) => {\n    props.postNews(formData.newPostText);\n  };\n\n  return (\n    <div>\n      <AddNewPostFormRedux  onSubmit={onAddPost}/>\n      <div className={style.posts}>\n        {postsElements}\n      </div>\n    </div>\n  );\n});\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form className={style.writeMessage} onSubmit={props.handleSubmit}>\n      <Field className={style.area} validate={[required, maxLength10]} placeholder='Whats up?' \n      name='newPostText' component={TextArea}></Field>\n      <div className={style.button}>\n        <button>Add Post</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nexport default MyPosts;","import MyPosts from './MyPosts';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n    photos: state.profilePage.photos\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    postNews: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","export default __webpack_public_path__ + \"static/media/bg.570f1bb2.jpg\";","//import style from './ProfileInfo.module.css';\nimport React, { useState, useEffect } from 'react';\n\nconst ProfileSatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const diActivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <div onDoubleClick={activateEditMode}>{props.status || 'No status'}</div>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={diActivateEditMode}\n                        value={status} />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ProfileSatusWithHooks;","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport style from './ProfileInfo.module.css';\nimport { createField, LoginInput, TextArea } from './../../common/FormsControls/FormsControls';\nimport { required } from '../../../utilits/validators/validators';\n\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\n    return (\n        <form className={style.description} onSubmit={handleSubmit}>\n            {error &&\n                <div className={style.formSummaryError}>\n                    {error}\n                </div>}\n            <div className={style.editButton}> <button >Save</button> </div>\n            <div className={style.item}>\n                <div className={style.userName}><b>Name</b>\n                    : {createField('Full Name', 'fullName', [required], LoginInput)}\n                </div>\n            </div>\n\n            <div className={style.item}><b>Looking for a job</b> :\n                {createField('', 'lookingForAJob', [], LoginInput, { type: 'checkbox' })}\n            </div>\n\n            <div className={style.item}>\n                <b>My professional skills</b> :\n                {createField('My professional skills', 'lookingForAJobDescription', [], TextArea)}\n            </div>\n            <div className={style.item}>\n                <b>About me</b> :{profile.AboutMe}\n                {createField('About me', 'aboutMe', [], TextArea)}\n            </div>\n            <div className={style.item}>\n                <b>Contacts</b> : {Object.keys(profile.contacts).map(key => {\n                    return (\n                        <div key={key} className={style.contact}>\n                            <b>{key}: {createField(key, 'contacts.' + key, [], LoginInput)}</b>\n                        </div>\n                    )\n                })}\n            </div>\n\n        </form>\n    )\n}\n\nconst ProfileDataFormReduxform = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\n\nexport default ProfileDataFormReduxform;","import style from './ProfileInfo.module.css';\nimport Preloader from './../../common/preloader/Preloader';\nimport userPhoto from './../../Users/assets/images/user.png';\nimport bgImage from './../Assets/Images/bg.jpg';\nimport ProfileSatusWithHooks from './ProfileStatusWithHooks';\nimport React, { useState } from 'react';\nimport ProfileDataFormReduxform from './ProfileDataForm';\n\nconst ProfileInfo = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  const mainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  }\n\n  const onSubmitFunc = (formData) => {\n    props.saveProfile(formData).then(\n      () => {\n        setEditMode(false);\n      }\n    );\n  }\n\n\n  return (\n    <div className={style.bgDescription}>\n      <img src={bgImage} alt={''} className={style.bgImg} />\n      {props.isOwner && <input type={'file'} onChange={mainPhotoSelected} />}\n      <div className={style.avatarContainer}>\n        <img alt={''} src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} />\n      </div>\n      <div className={style.itemStatus}>\n        < ProfileSatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n      </div>\n      {editMode\n        ? <ProfileDataFormReduxform initialValues={props.profile} profile={props.profile} onSubmit={onSubmitFunc} />\n        : < ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => { setEditMode(true) }} />}\n    </div>\n  );\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div className={style.description}>\n      {isOwner && <div className={style.editButton}> <button onClick={goToEditMode}>Edit</button> </div>}\n      <div className={style.item}>\n        <div className={style.userName}><b>Name</b> : {profile.fullName}</div>\n      </div>\n\n      <div className={style.item}>\n        <b>Looking for a job</b> :{profile.lookingForAJob ? 'yes' : 'no'}\n      </div>\n      {profile.lookingForAJob &&\n        <div className={style.item}>\n          <b>My skills</b> :{profile.lookingForAJobDescription}\n        </div>\n      }\n      <div className={style.item}>\n        <b>About me</b> :{profile.aboutMe}\n      </div>\n      <div className={style.item}>\n        <b>Contacts</b> : {Object.keys(profile.contacts).map(key => {\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={style.contact}>\n      <b> {contactTitle} </b> : {contactValue}\n    </div>\n  )\n}\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\n                updateStatus={props.updateStatus} savePhoto={props.savePhoto}\n                saveProfile={props.saveProfile} />\n            <MyPostsContainer />\n        </div>);\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\nimport { withRouter } from 'react-router';\nimport { WithAuthRedirect } from '../hoc/AuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile = () => {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.autorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        };\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) { this.refreshProfile(); }\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} isOwner={!this.props.match.params.userId} profile={this.props.profile} status={this.props.status}\n                    updateStatus={this.props.updateStatus} savePhoto={this.props.savePhoto} />\n            </div>);\n    }\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        autorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter, WithAuthRedirect)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}
{"version":3,"sources":["components/hoc/AuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Assets/Images/bg.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","style","item","src","news","message","likes","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","map","post","id","AddNewPostFormRedux","onSubmit","formData","postNews","newPostText","reduxForm","form","writeMessage","handleSubmit","Field","area","validate","required","placeholder","name","component","TextArea","button","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileSatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","bgDescription","bgImage","bgImg","avatarContainer","photos","small","userPhoto","description","userName","fullName","aboutMe","lookingForAJobDescription","Preloader","Profile","ProfileContainer","userId","match","params","autorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.994630db.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n};\n\nexport const WithAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        }\n    }\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgDescription\":\"ProfileInfo_bgDescription__3zN-X\",\"bgImg\":\"ProfileInfo_bgImg__1v8sR\",\"avatarContainer\":\"ProfileInfo_avatarContainer__1Nl_A\",\"description\":\"ProfileInfo_description__2yWda\",\"item\":\"ProfileInfo_item__2oxPX\",\"userName\":\"ProfileInfo_userName__2XnM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"writeMessage\":\"MyPosts_writeMessage__2aPDx\",\"button\":\"MyPosts_button__2WbpQ\",\"area\":\"MyPosts_area__XnDhM\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"likes\":\"Post_likes__2o7Hq\",\"news\":\"Post_news__R0WCn\"};","import style from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={style.item}>\n      <img src='https://images3.alphacoders.com/690/690494.jpg'></img>\n      <div className={style.news}>{props.message}</div>\n      <div className={style.likes}><span>Likes</span> {props.likesCount}</div> \n    </div>\n  );\n}\n\nexport default Post;","import React from 'react';\nimport style from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from '../../../utilits/validators/validators';\nimport { TextArea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo((props) => {\n\n  let postsElements = props.posts.map((post) => <Post message={post.post} key={post.id} likesCount={post.likesCount} />);\n\n  let onAddPost = (formData) => {\n    props.postNews(formData.newPostText);\n  };\n\n  return (\n    <div>\n      <AddNewPostFormRedux  onSubmit={onAddPost}/>\n      <div className={style.posts}>\n        {postsElements}\n      </div>\n    </div>\n  );\n});\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form className={style.writeMessage} onSubmit={props.handleSubmit}>\n      <Field className={style.area} validate={[required, maxLength10]} placeholder='Whats up?' \n      name='newPostText' component={TextArea}></Field>\n      <div className={style.button}>\n        <button>Add Post</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nexport default MyPosts;","import MyPosts from './MyPosts';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    postNews: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","export default __webpack_public_path__ + \"static/media/bg.570f1bb2.jpg\";","import style from './ProfileInfo.module.css';\nimport React, { useState, useEffect } from 'react';\n\nconst ProfileSatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const diActivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <div onDoubleClick={activateEditMode}>{props.status || 'No status'}</div>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={diActivateEditMode}\n                        value={status} />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ProfileSatusWithHooks;","import style from './ProfileInfo.module.css';\nimport Preloader from './../../common/preloader/Preloader';\nimport userPhoto from './../../Users/assets/images/user.png';\nimport bgImage from './../Assets/Images/bg.jpg';\nimport ProfileSatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />\n  }\n  return (\n    <div className={style.bgDescription}>\n      <img src={bgImage} className={style.bgImg} />\n      <div className={style.avatarContainer}>\n        <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} />\n      </div>\n      <div className={style.description}>\n        <div className={style.item}>\n          <div className={style.userName}>{props.profile.fullName}</div>\n        </div>\n        <div className={style.item}>\n          < ProfileSatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n        </div>\n        <div className={style.item}>{props.profile.aboutMe}</div>\n        <div className={style.item}>{props.profile.lookingForAJobDescription}</div>\n        <div className={style.item}>{ }</div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile= {props.profile} status= {props.status} \n                updateStatus= {props.updateStatus}/>\n            <MyPostsContainer />\n        </div>);\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { withRouter } from 'react-router';\nimport { WithAuthRedirect } from '../hoc/AuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.autorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        };\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                    updateStatus={this.props.updateStatus} />\n            </div>);\n    }\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        autorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus}),\n    withRouter, WithAuthRedirect\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}
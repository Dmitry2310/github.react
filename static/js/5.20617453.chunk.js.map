{"version":3,"sources":["components/pages/Chat/ChatPage.tsx"],"names":["wsChannel","WebSocket","Chat","ChatMessages","ChatMessagesForm","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","style","height","overflowY","map","mes","index","Message","message","src","photo","userName","setMessage","onChange","currentTarget","value","onClick","send","ChatPage"],"mappings":"8IAEMA,EAAY,IAAIC,UAAU,gEAkB1BC,EAAiB,WAEnB,OACI,gCACI,cAAEC,EAAF,IACA,cAAEC,EAAF,QAIND,EAAyB,WAE3B,MAAgCE,mBAA4B,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,qBAAU,WACNR,EAAUS,iBAAiB,WAAW,SAACC,GACnC,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BP,GAAY,SAACQ,GAAD,4BAAsBA,GAAtB,YAAuCJ,YAExD,IAGC,qBAAKK,MAAO,CAAEC,OAAQ,IAAKC,UAAW,QAAtC,SACKZ,EAASa,KAAI,SAACC,EAAKC,GAAN,OAAgB,cAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAKlDC,EAAkD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEvD,OACI,gCACI,qBAAKC,IAAKD,EAAQE,QADtB,IACgC,4BAAIF,EAAQG,WACxC,8BACKH,EAAQA,UAEb,2BAKNnB,EAA6B,WAE/B,MAA8BC,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBI,EAAhB,KAWA,OACI,gCACI,8BACI,0BAAUC,SAAU,SAAClB,GAAD,OAAOiB,EAAWjB,EAAEmB,cAAcC,QAAQA,MAAOP,MAEzE,8BACI,wBAAQQ,QAdA,WACXR,IAGLvB,EAAUgC,KAAKT,GACfI,EAAW,OASH,wBAMDM,UA1EY,WAEvB,OACI,8BACI,cAAE/B,EAAF","file":"static/js/5.20617453.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst wsChannel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n\nexport type ChatMessageTupe = {\n    message: string,\n    photo: string,\n    userId: number,\n    userName: string\n}\n\nconst ChatPage: React.FC = () => {\n\n    return (\n        <div>\n            < Chat />\n        </div>\n    )\n}\n\nconst Chat: React.FC = () => {\n\n    return (\n        <div>\n            < ChatMessages />\n            < ChatMessagesForm />\n        </div>\n    )\n}\nconst ChatMessages: React.FC = () => {\n\n    const [messages, setMessages] = useState<ChatMessageTupe[]>([])\n\n    useEffect(() => {\n        wsChannel.addEventListener('message', (e: MessageEvent) => {\n            let newMessages = JSON.parse(e.data);\n            setMessages((prevMessages) => [...prevMessages, ...newMessages])\n        })\n    }, [])\n\n    return (\n        <div style={{ height: 300, overflowY: 'auto' }}>\n            {messages.map((mes, index) => <Message key={index} message={mes} />)}\n        </div>\n    )\n}\n\nconst Message: React.FC<{ message: ChatMessageTupe }> = ({ message }) => {\n\n    return (\n        <div>\n            <img src={message.photo} /> <b>{message.userName}</b>\n            <div>\n                {message.message}\n            </div>\n            <hr />\n        </div>\n    )\n}\n\nconst ChatMessagesForm: React.FC = () => {\n\n    const [message, setMessage] = useState('');\n\n\n    const sendMessage = () => {\n        if (!message) {\n            return;\n        }\n        wsChannel.send(message);\n        setMessage(' ');\n    }\n\n    return (\n        <div>\n            <div>\n                <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\n            </div>\n            <div>\n                <button onClick={sendMessage}>Send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatPage;"],"sourceRoot":""}